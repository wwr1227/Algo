/**
题目描述 Description
    某国为了防御敌国的导弹袭击，发展出一种导弹拦截系统。但是这种导弹拦截系统有一个缺陷：虽然它的第一发炮弹能够到达任意的高度，但是以后每一发炮弹都不能高于前一发的高度。某天，雷达捕捉到敌国的导弹来袭。由于该系统还在试用阶段，所以只有一套系统，因此有可能不能拦截所有的导弹。
  
输入描述 Input Description
输入导弹依次飞来的高度（雷达给出的高度数据是不大于30000的正整数）
  
输出描述 Output Description
输出这套系统最多能拦截多少导弹，如果要拦截所有导弹最少要配备多少套这种导弹拦截系统。
样例输入 Sample Input
389 207 155 300 299 170 158 65 
样例输出 Sample Output
6
2
88
**/

//Problem1: 最长下降子序列
int[] b = new int[n];
b[0]=1;
int ans = 1;
for(int i=1;i<n;i++){
	int max = 0;
	for(int j=0;j<i;j++){
		if(num[i]<num[j]&&b[j]>max)
			max=b[j];
	}
	b[i]=max+1;
	if(b[i]>ans)
		ans=b[i];
}

//Problem2: 最长上升子序列
int[] a= new int[n];
int a[0]=1;
int ans =1;
for(int i=1;i<n;i++){
	int max = 0;
	for(int j=0;j<i;j++){
		if(num[i]>num[j]&&a[j]>max)
			max=a[j];
	}
	a[i]=max+1;
	if(a[i]>ans)
		ans=a[i];
}
